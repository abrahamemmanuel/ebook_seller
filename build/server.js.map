{"version":3,"sources":["../src/server.js"],"names":["keys","require","stripe","stripeSecretKey","app","engine","defaultLayout","set","use","bodyParser","json","urlencoded","extended","express","path","join","__dirname","get","req","res","render","stripePublishableKey","router","port","process","env","PORT","listen","console","log"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBD,IAAI,CAACG,eAAvB,CAAf,C,CAEA;;;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,MAAJ,CAAW,YAAX,EAAyB,mCAAM;AAAEC,EAAAA,aAAa,EAAE;AAAjB,CAAN,CAAzB;AACAF,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,YAAvB,E,CAEA;;AACAH,GAAG,CAACI,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAR,GAAG,CAACI,GAAJ,CAAQK,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR,E,CAEA;AACA;AACA;AACA;AACA;;AACAZ,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAEA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,oBAAoB,EAAErB,IAAI,CAACqB;AAA7B,GAApB;AAA2E,CAAxG,E,CAEA;;AACAjB,GAAG,CAACI,GAAJ,CAAQc,kBAAR,E,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAtB,GAAG,CAACuB,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AAAEK,EAAAA,OAAO,CAACC,GAAR,kCAAsCN,IAAtC;AAAgD,CAAzE,E,CAA4E","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport path from 'path';\r\nimport exhbs from 'express-handlebars';\r\nimport router from './api/charge';\r\n\r\nconst keys = require('./config/keys');\r\nconst stripe = require('stripe')(keys.stripeSecretKey);\r\n\r\n// create server\r\nconst app = express();\r\n\r\n// handlebars middleware\r\napp.engine('handlebars', exhbs({ defaultLayout: 'main' }));\r\napp.set('view engine', 'handlebars');\r\n\r\n// body parser middleware\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\n// set static folder\r\napp.use(express.static(path.join(__dirname, './public/')));\r\n\r\n// set index route\r\n// @route   /\r\n// @desc     Get Home page\r\n// @access   Public\r\n// @method   GET\r\napp.get('/', (req, res) => { res.render('index', { stripePublishableKey: keys.stripePublishableKey }); });\r\n\r\n// set server to use router\r\napp.use(router);\r\n\r\n// declare port variable\r\nconst port = process.env.PORT || 8080;\r\n\r\n// set server to listen on corresponding port\r\napp.listen(port, () => { console.log(`Server started on port ${port}`); }); // eslint-disable-line no-console\r\n"],"file":"server.js"}